
{
    "scopeName": "source.algo",
    "patterns": [{ "include": "#expression" }],
    "repository": {
        "expression": {
            "patterns": [
                { "include": "#single-comment" }, { "include": "#double-comment" },
                { "include": "#keywords" }, { "include": "#numbers" }, 
                { "include": "#types" }, { "include": "#constant" },
                { "include": "#single-quote" }, { "include": "#double-quote" },
                { "include": "#function" }, { "include": "#arrow" },
                { "include": "#furry" }, { "include": "#blank" }
            ]
        },
        "keywords": {
            "match": "fonction[^a-zA-Z0-9]|algorithme[^a-zA-Z0-9]|tant que[^a-zA-Z0-9]|fpour[^a-zA-Z0-9]|pour[^a-zA-Z0-9]|ftant[^a-zA-Z0-9]|sinon[^a-zA-Z0-9]|alors[^a-zA-Z0-9]|si[^a-zA-Z0-9]|fsi[^a-zA-Z0-9]|début[^a-zA-Z0-9]|fin[^a-zA-Z0-9]|à[^a-zA-Z0-9]|faire[^a-zA-Z0-9]|de[^a-zA-Z0-9]|retourne[^a-zA-Z0-9]|et[^a-zA-Z0-9]|non[^a-zA-Z0-9]|ou[^a-zA-Z0-9]|InOut[^a-zA-Z0-9]|mod[^a-zA-Z0-9]|chaque[^a-zA-Z0-9]|dans[^a-zA-Z0-9]|décroissant[^a-zA-Z0-9]|jusque[^a-zA-Z0-9]",
            "name": "keyword.letter"
        },
        "numbers": {
            "match": "[0-9]+\\.[0-9]|[0-9]+|vrai|faux",
            "name": "constant.numeric.decimal"
        },
        "types": {
            "match": "entier|chaîne|caractère|booléen|réel|tableau|[A-ZÉÊÂÛÙÀÈÇÏÎ]+[a-z0-9éêâûùàèçïî]+[a-zA-Z0-9éêâûùàèçïîÏÎÉÊÂÛÙÀÈÇ_]*",
            "name": "entity.name.type.instance"
        },
        "arrow": {
            "match": "←|◄-|<-|<=|=|<|>|>=|->|=>|-►|→|/|≠",
            "name": "support.function"
        },
        "double-quote": {
            "begin": "\"",
            "end": "\"",
            "name": "string.quoted.single"
        },
        "single-quote": {
            "begin": "'",
            "end": "'",
            "name": "string.quoted.single"
        },
        "single-comment": {
            "begin": "//",
            "end": "\\n",
            "name": "comment.line.double-slash"
        },
        "double-comment": {
            "begin": "/\\*",
            "end": "\\*/",
            "name": "comment.block"
        },
        "constant": {
            "match": "[A-ZÏÎÉÊÂÛÙÀÈÇ]+[A-ZÏÎÉÊÂÛÙÀÈÇ_]*",
            "name": "variable.other.contants"
        },
        "function": {
            "match": "[a-zA-ZéêâûùàèçïîÏÎÉÊÂÛÙÀÈÇ_]+\\(|\\(|\\)",
            "name": "entity.name.function"
        },
        "furry": {
            "match": "furry|furries|uwu|owo|awoo|roar",
            "name": "storage.type.function"
        },
        "blank": {
            "match": "[a-zA-ZéêâûùàèçïîÏÎÉÊÂÛÙÀÈÇ_]+[0-9]*[^\\(]",
            "name": "meta.brace.square"
        }
    }
}